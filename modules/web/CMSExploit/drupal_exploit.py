#!/usr/bin/python3
import requests
import re
from core.colors import *
import sys, os
from concurrent.futures import ThreadPoolExecutor as TPE
class DrupalScanner:
    pythonpath = os.environ['PYTHONPATH'].split(os.pathsep)
    project_root = os.path.abspath(pythonpath[0])
    
    def __init__(self, url):
        self.url = url
        self.module_common_file = "LICENSE.txt"
        self.plugins_base_url = "sites/all/module/"
        self.plugins_dir = self.project_root+'/db/drupal/plugins.txt'
        


    def plugin_enumeration(self):
        drupal_plugins = []
        valid_plugin = ""
        
        with open(self.plugins_dir,'r') as f:
            lines = f.readlines()
            
            
        

    def check_node(self):
        pass

    def check_version(self, method=''):
        if method == 'C':
            if not self.url.endswith('/'):
                url = self.url + '/CHANGELOG.txt'
            else:
                url = self.url + "CHANGELOG.txt"
        try:
            response = requests.get(url)
            if response.status_code == 200:
                match = re.search(r'Drupal (\d+(\.\d+)*)', response.text)
                if match:
                    version = match.group(1)
                    print(f"{good} Found Version {yellow} {version} {end}")
                else:
                    print(f"{bad}Version not found in CHANGELOG.txt")
        except requests.exceptions.RequestException as e:
            print(f"Error: {e}")

    def username_enumeration(self):
        pass

    def scan(self):
        pass


if __name__ == "__main__":
    sc = DrupalScanner('')
    sc.plugin_enumeration()
